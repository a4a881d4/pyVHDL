
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x00=3yr\xc8x\xe6\xb3\x01\xaeZ\xb1\xe5\xed\x8f'
    
_lr_action_items = {'LBRACE':([4,],[5,]),'NATURAL':([28,],[33,]),'RBRACE':([7,10,11,12,13,22,29,31,32,],[-5,17,-6,-3,-7,-4,-8,-10,-9,]),'GENERIC':([5,18,],[6,6,]),'INTEGER':([28,39,],[36,41,]),'ARROW':([36,],[40,]),'RPAREN':([41,],[43,]),'ENTITY':([0,],[2,]),'LBRACKET':([14,15,16,],[19,20,21,]),'COLON':([6,8,9,23,],[14,15,16,28,]),'LPAREN':([33,],[39,]),'IN':([5,18,],[9,9,]),'STDLOGIC':([40,],[42,]),'COMMA':([7,11,12,13,25,29,31,32,33,34,35,36,37,42,43,],[-5,-6,18,-7,30,-8,-10,-9,-18,-15,-13,-16,-14,-17,-19,]),'RBRACKET':([24,25,26,27,33,34,35,36,37,38,42,43,],[29,-11,31,32,-18,-15,-13,-16,-14,-12,-17,-19,]),'$end':([1,3,17,],[0,-1,-2,]),'ID':([2,19,20,21,30,],[4,23,23,23,23,]),'OUT':([5,18,],[8,8,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'natural':([28,],[34,]),'vhdl':([0,],[1,]),'generic':([5,18,],[7,7,]),'entity':([0,],[3,]),'port':([19,20,21,30,],[25,25,25,25,]),'ports_list':([5,18,],[10,22,]),'state':([28,],[35,]),'port_list':([19,20,21,30,],[24,26,27,38,]),'in':([5,18,],[11,11,]),'std_logic':([28,],[37,]),'ports':([5,18,],[12,12,]),'out':([5,18,],[13,13,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> vhdl","S'",1,None,None,None),
  ('vhdl -> entity','vhdl',1,'p_vhdl','/cygdrive/g/works/python/pyVHDL/src/vhdlparse.py',10),
  ('entity -> ENTITY ID LBRACE ports_list RBRACE','entity',5,'p_entity','/cygdrive/g/works/python/pyVHDL/src/vhdlparse.py',13),
  ('ports_list -> ports','ports_list',1,'p_ports_list','/cygdrive/g/works/python/pyVHDL/src/vhdlparse.py',17),
  ('ports_list -> ports COMMA ports_list','ports_list',3,'p_ports_list','/cygdrive/g/works/python/pyVHDL/src/vhdlparse.py',18),
  ('ports -> generic','ports',1,'p_ports','/cygdrive/g/works/python/pyVHDL/src/vhdlparse.py',22),
  ('ports -> in','ports',1,'p_ports','/cygdrive/g/works/python/pyVHDL/src/vhdlparse.py',23),
  ('ports -> out','ports',1,'p_ports','/cygdrive/g/works/python/pyVHDL/src/vhdlparse.py',24),
  ('generic -> GENERIC COLON LBRACKET port_list RBRACKET','generic',5,'p_generic','/cygdrive/g/works/python/pyVHDL/src/vhdlparse.py',28),
  ('in -> IN COLON LBRACKET port_list RBRACKET','in',5,'p_in','/cygdrive/g/works/python/pyVHDL/src/vhdlparse.py',32),
  ('out -> OUT COLON LBRACKET port_list RBRACKET','out',5,'p_out','/cygdrive/g/works/python/pyVHDL/src/vhdlparse.py',36),
  ('port_list -> port','port_list',1,'p_port_list','/cygdrive/g/works/python/pyVHDL/src/vhdlparse.py',40),
  ('port_list -> port COMMA port_list','port_list',3,'p_port_list','/cygdrive/g/works/python/pyVHDL/src/vhdlparse.py',41),
  ('port -> ID COLON state','port',3,'p_port','/cygdrive/g/works/python/pyVHDL/src/vhdlparse.py',45),
  ('state -> std_logic','state',1,'p_state','/cygdrive/g/works/python/pyVHDL/src/vhdlparse.py',49),
  ('state -> natural','state',1,'p_state','/cygdrive/g/works/python/pyVHDL/src/vhdlparse.py',50),
  ('std_logic -> INTEGER','std_logic',1,'p_std_logic','/cygdrive/g/works/python/pyVHDL/src/vhdlparse.py',54),
  ('std_logic -> INTEGER ARROW STDLOGIC','std_logic',3,'p_std_logic','/cygdrive/g/works/python/pyVHDL/src/vhdlparse.py',55),
  ('natural -> NATURAL','natural',1,'p_natural','/cygdrive/g/works/python/pyVHDL/src/vhdlparse.py',59),
  ('natural -> NATURAL LPAREN INTEGER RPAREN','natural',4,'p_natural','/cygdrive/g/works/python/pyVHDL/src/vhdlparse.py',60),
]
